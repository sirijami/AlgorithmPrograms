
public class MaxSumPathBinaryTree {

	private Node root;
	int max_sum = Integer.MIN_VALUE;
	int curr_sum = 0;
	Node targetLeafNode = null;
	
    void  maxSumPath(Node node, int sum){
		if(root == null){
             return;
		}
		
		sum = sum + node.data;
		if(sum > curr_sum && node.left == null && node.right == null ){
			max_sum = curr_sum;
			targetLeafNode = node;
		}
		System.out.println("sum " + sum);
		maxSumPath(node.left, sum);
		maxSumPath(node.right, sum);

//		printPath();
	
	}
	

	

	public static void main(String[] args) {
		MaxSumPathBinaryTree t = new MaxSumPathBinaryTree();
		t.root = new Node(2);
		t.root.left = new Node(10);
		t.root.right = new Node(5);
		t.root.left.left = new Node(-2);
		t.root.right.right = new Node(5);
		System.out.println("Max sum of all nodes from root to leaf is " + t.maxSumPath(t.root, 0));
	}

}
