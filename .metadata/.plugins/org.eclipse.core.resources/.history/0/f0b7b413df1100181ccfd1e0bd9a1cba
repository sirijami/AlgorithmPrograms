package SearchingAssignmentPackage;

public class ElementExistsinSortedRotatedArray {

	public static void main(String[] args) {
		int[] arr = {3,4,5,6,1,2};
		int target = 4;
		System.out.println(searchElement(arr, target));
	}
	
	/* Find the mid element and check it with the last element
	 * if the mid value is greater than the end element then
	 * check where the target value might be 
	 * based on that set start and end points
	 * if the mid value is less than end 
	 * check with the target value and set the start and end points accordingly
	 * */

	private static int searchElement(int[] nums, int target) {
		/* Check for whether the array is empty or not */
		if(nums.length == 0){
			return -1;
		}
	    int start = 0, end = nums.length - 1;
	    while (start < end) {
	        int mid = (start + end) / 2;
	        System.out.println("mid " + mid);
	        if (nums[mid] > nums[end]) {  // eg. 3,4,5,6,1,2
	            if (target > nums[mid] || target <= nums[end]) {
	                start = mid + 1;
	            } else {
	                end = mid;
	            }
	        } else {  // eg. 5,6,1,2,3,4
	            if (target > nums[mid] && target <= nums[end]) {
	                start = mid + 1;
	            } else {
	                end = mid;
	            }
	        }
	    }
	    if (start == end && target != nums[start]) {
	    	return -1;
	    }
	    return start;
		
	}


	              

}
