content_assist_disabled_computers=org.eclipse.jdt.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\u0000org.eclipse.jdt.ui.textProposalCategory\u0000org.eclipse.recommenders.calls.rcp.proposalCategory.templates\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\u0000org.eclipse.recommenders.chain.rcp.proposalCategory.chain\u0000org.eclipse.mylyn.java.ui.javaAllProposalCategory\u0000
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="leetCodeAlgoEasy.nextGreaterEleOne"><rhs name\="leetCodeAlgoEasy.nextGreaterEleOne"/></lhs><lhs name\="java.lang.CharSequence"><rhs name\="java.lang.String"/><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="java.lang.AbstractStringBuilder"><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="java.lang.Appendable"><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="java.util.List"><rhs name\="java.util.Stack"/><rhs name\="java.util.ArrayList"/><rhs name\="java.util.LinkedList"/></lhs><lhs name\="java.util.RandomAccess"><rhs name\="java.util.Stack"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.lang.Cloneable"><rhs name\="java.util.TreeMap"/><rhs name\="java.util.Hashtable"/><rhs name\="java.util.LinkedHashMap"/><rhs name\="java.util.Stack"/><rhs name\="java.util.HashSet"/><rhs name\="java.util.HashMap"/><rhs name\="java.util.ArrayList"/><rhs name\="java.util.LinkedList"/></lhs><lhs name\="java.util.Collection"><rhs name\="java.util.Stack"/><rhs name\="java.util.HashSet"/><rhs name\="java.util.TreeSet"/><rhs name\="java.util.ArrayList"/><rhs name\="java.util.LinkedList"/></lhs><lhs name\="java.lang.Iterable"><rhs name\="java.util.Stack"/><rhs name\="java.util.HashSet"/><rhs name\="java.util.TreeSet"/><rhs name\="java.util.ArrayList"/><rhs name\="java.util.LinkedList"/></lhs><lhs name\="java.util.AbstractList"><rhs name\="java.util.Stack"/><rhs name\="java.util.ArrayList"/><rhs name\="java.util.LinkedList"/></lhs><lhs name\="java.util.AbstractCollection"><rhs name\="java.util.Stack"/><rhs name\="java.util.HashSet"/><rhs name\="java.util.ArrayList"/><rhs name\="java.util.LinkedList"/></lhs><lhs name\="java.util.ArrayList"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.Map"><rhs name\="java.util.TreeMap"/><rhs name\="java.util.Hashtable"/><rhs name\="java.util.LinkedHashMap"/><rhs name\="java.util.HashMap"/></lhs><lhs name\="java.util.AbstractMap"><rhs name\="java.util.TreeMap"/><rhs name\="java.util.LinkedHashMap"/><rhs name\="java.util.HashMap"/></lhs><lhs name\="java.util.HashMap"><rhs name\="java.util.LinkedHashMap"/><rhs name\="java.util.HashMap"/></lhs><lhs name\="java.util.Deque"><rhs name\="java.util.LinkedList"/></lhs><lhs name\="java.util.Queue"><rhs name\="java.util.LinkedList"/></lhs><lhs name\="java.util.AbstractSequentialList"><rhs name\="java.util.LinkedList"/></lhs><lhs name\="java.util.LinkedList"><rhs name\="java.util.LinkedList"/></lhs><lhs name\="demo.linkedList$Node"><rhs name\="demo.linkedList$Node"/></lhs><lhs name\="demo.linkedList$ListNode"><rhs name\="demo.linkedList$ListNode"/></lhs><lhs name\="leetCodeAlgoEasy.LinkedList$ListNode"><rhs name\="leetCodeAlgoEasy.LinkedList$ListNode"/></lhs><lhs name\="intersectionLinkedList"><rhs name\="intersectionLinkedList"/></lhs><lhs name\="leetCodeAlgoEasy.addLinkedListNumbers"><rhs name\="leetCodeAlgoEasy.addLinkedListNumbers"/></lhs><lhs name\="leetCodeAlgoEasy.addLinkedListNumbers$ListNode"><rhs name\="leetCodeAlgoEasy.addLinkedListNumbers$ListNode"/></lhs><lhs name\="mergeSortedLinkedList"><rhs name\="mergeSortedLinkedList"/></lhs><lhs name\="mergeSortedLinkedList$Node"><rhs name\="mergeSortedLinkedList$Node"/></lhs><lhs name\="java.util.NavigableMap"><rhs name\="java.util.TreeMap"/></lhs><lhs name\="java.util.SortedMap"><rhs name\="java.util.TreeMap"/></lhs><lhs name\="java.util.TreeMap"><rhs name\="java.util.TreeMap"/></lhs><lhs name\="java.util.Dictionary"><rhs name\="java.util.Hashtable"/></lhs><lhs name\="java.util.Hashtable"><rhs name\="java.util.Hashtable"/></lhs><lhs name\="leetCodeAlgoEasy.binaryTree"><rhs name\="leetCodeAlgoEasy.binaryTree"/></lhs><lhs name\="leetCodeAlgoEasy.binaryTree$TreeNode"><rhs name\="leetCodeAlgoEasy.binaryTree$TreeNode"/></lhs><lhs name\="treeNode"><rhs name\="treeNode"/></lhs><lhs name\="tree"><rhs name\="tree"/></lhs><lhs name\="TopViewBibaryTree"><rhs name\="TopViewBibaryTree"/></lhs><lhs name\="MainTree"><rhs name\="MainTree"/></lhs><lhs name\="java.util.LinkedHashMap"><rhs name\="java.util.LinkedHashMap"/></lhs><lhs name\="java.util.Set"><rhs name\="java.util.HashSet"/><rhs name\="java.util.TreeSet"/></lhs><lhs name\="java.util.AbstractSet"><rhs name\="java.util.HashSet"/></lhs><lhs name\="java.util.HashSet"><rhs name\="java.util.HashSet"/></lhs><lhs name\="MyStack"><rhs name\="MyStack"/></lhs><lhs name\="MaxSumPathBinaryTree"><rhs name\="MaxSumPathBinaryTree"/></lhs><lhs name\="TreeTraversal"><rhs name\="TreeTraversal"/></lhs><lhs name\="java.util.Vector"><rhs name\="java.util.Stack"/></lhs><lhs name\="java.util.Stack"><rhs name\="java.util.Stack"/></lhs><lhs name\="stringComparision"><rhs name\="stringComparision"/></lhs><lhs name\="CircularLinkedList"><rhs name\="CircularLinkedList"/></lhs><lhs name\="FindIfSubTreeMirrorExistsInTree"><rhs name\="FindIfSubTreeMirrorExistsInTree"/></lhs><lhs name\="leetCodeAlgoEasy.EmployeeImportanceLeet"><rhs name\="leetCodeAlgoEasy.EmployeeImportanceLeet"/></lhs><lhs name\="RansomeNote"><rhs name\="RansomeNote"/></lhs><lhs name\="TreeNode"><rhs name\="TreeNode"/></lhs><lhs name\="SingleLinkedListPackage.SingleLinkedList"><rhs name\="SingleLinkedListPackage.SingleLinkedList"/></lhs><lhs name\="java.util.Iterator"><rhs name\="java.util.Scanner"/></lhs><lhs name\="SingleLinkedListPackage.Node"><rhs name\="SingleLinkedListPackage.Node"/></lhs><lhs name\="demo.Employee"><rhs name\="demo.Department"/><rhs name\="demo.Employee"/></lhs><lhs name\="demo.Department"><rhs name\="demo.Department"/></lhs><lhs name\="CircularLinkedList.CircularLinkedList"><rhs name\="CircularLinkedList.CircularLinkedList"/></lhs><lhs name\="StackLinkedList.StackL"><rhs name\="StackLinkedList.StackL"/></lhs><lhs name\="QueueArray.QueueA"><rhs name\="QueueArray.QueueA"/></lhs></history>
content_assist_number_of_computers=24
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
fontPropagated=true
org.eclipse.jdt.ui.editor.tab.width=
org.eclipse.jdt.ui.formatterprofiles.version=12
org.eclipse.jdt.ui.javadoclocations.migrated=true
org.eclipse.jdt.ui.text.code_templates_migrated=true
org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates/>
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates/>
org.eclipse.jdt.ui.text.templates_migrated=true
org.eclipse.jface.textfont=1|Monaco|14.0|0|COCOA|1|Monaco;
proposalOrderMigrated=true
spelling_locale_initialized=true
tabWidthPropagated=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
